// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ—Ä–∞–∑ –ú–∞—è–º–∏ –ß–º–æ
const loxPhrases = [
    "–Ø –Ω–µ —á–º–æ, —è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å!",
    "–ß–º–æ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º - —ç—Ç–æ —Å–∏–ª–∞!",
    "–°–µ–≥–æ–¥–Ω—è —è —á–º–æ, –∑–∞–≤—Ç—Ä–∞ - –ª–µ–≥–µ–Ω–¥–∞!",
    "–ú–∞—è–º–∏ —É—á–∏—Ç: –±—É–¥—å —Å–æ–±–æ–π, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã —á–º–æ!",
    "–ß–º–æ–º –±—ã—Ç—å - —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ!",
    "–ß–º–æ - —ç—Ç–æ –Ω–µ –ø—Ä–∏–≥–æ–≤–æ—Ä, —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏!",
    "–ú–∞—è–º–∏ –Ω–∞ –ø–ª—è–∂–µ, —Å–æ–ª–Ω—Ü–µ –≤—Å—Ç–∞–µ—Ç...",
    "–ß–º–æ —Å —É–ª—ã–±–∫–æ–π - —É–∂–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–º–æ!",
    "–ì–ª–∞–≤–Ω–æ–µ –ø–æ—Ö—É–π!",
    "Best tourist on SVO"
];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    initFloatingElements();
    initLoxGenerator();
    initGame();
    initMemeGallery();
});

// –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≤–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
function initFloatingElements() {
    const floatingElements = document.getElementById('floatingElements');
    const symbols = ['üòé', 'ü§™', 'üî•', 'üå¥', 'üçπ', 'üëë', 'üí∞', 'ü§Æ'];
    
    for (let i = 0; i < 20; i++) {
        const element = document.createElement('div');
        element.className = 'floating-element';
        element.textContent = symbols[Math.floor(Math.random() * symbols.length)];
        element.style.left = Math.random() * 100 + 'vw';
        element.style.animationDelay = Math.random() * 15 + 's';
        element.style.fontSize = (Math.random() * 2 + 1) + 'rem';
        floatingElements.appendChild(element);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Ñ—Ä–∞–∑
function initLoxGenerator() {
    document.getElementById('generateLox').addEventListener('click', function() {
        const randomIndex = Math.floor(Math.random() * loxPhrases.length);
        document.getElementById('loxResult').textContent = loxPhrases[randomIndex];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        const resultElement = document.getElementById('loxResult');
        resultElement.style.transform = 'scale(1.1)';
        setTimeout(() => {
            resultElement.style.transform = 'scale(1)';
        }, 300);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
function initGame() {
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    const scoreElement = document.getElementById('score');
    const startButton = document.getElementById('startGame');
    
    let score = 0;
    let gameInterval;
    let loxX, loxY;
    let loxSize = 60;
    let currentImage = new Image();
    
    // –ú–∞—Å—Å–∏–≤ —Å –ø—É—Ç—è–º–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    const imagePaths = [
        'img/1.jpg',
        'img/2.jpg', 
        'img/3.jpg',
        'img/4.jpg',
        'img/logo.jpg'
    ];
    
    function getRandomImage() {
        const randomIndex = Math.floor(Math.random() * imagePaths.length);
        currentImage.src = imagePaths[randomIndex];
    }
    
    function drawLox() {
        if (currentImage.complete && currentImage.naturalWidth !== 0) {
            // –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —É–≥–ª–∞–º–∏
            ctx.save();
            ctx.beginPath();
            ctx.arc(loxX, loxY, loxSize, 0, Math.PI * 2);
            ctx.closePath();
            ctx.clip();
            
            ctx.drawImage(
                currentImage, 
                loxX - loxSize, 
                loxY - loxSize, 
                loxSize * 2, 
                loxSize * 2
            );
            ctx.restore();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±–≤–æ–¥–∫—É
            ctx.beginPath();
            ctx.arc(loxX, loxY, loxSize, 0, Math.PI * 2);
            ctx.strokeStyle = '#ff00ff';
            ctx.lineWidth = 3;
            ctx.stroke();
        } else {
            // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, —Ä–∏—Å—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –∫—Ä—É–≥
            ctx.fillStyle = '#ff00ff';
            ctx.beginPath();
            ctx.arc(loxX, loxY, loxSize, 0, Math.PI * 2);
            ctx.fill();
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
            ctx.fillStyle = 'white';
            ctx.font = '16px Arial';
            ctx.textAlign = 'center';
            ctx.fillText('–ß–ú–û', loxX, loxY + 5);
        }
    }
    
    function resetLox() {
        loxX = Math.random() * (canvas.width - loxSize * 2) + loxSize;
        loxY = Math.random() * (canvas.height - loxSize * 2) + loxSize;
        getRandomImage();
    }
    
    function gameLoop() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        drawLox();
    }
    
    function handleClick(x, y) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ø–∞–ª –ª–∏ –∫–ª–∏–∫ –ø–æ —á–º–æ
        const distance = Math.sqrt((x - loxX) ** 2 + (y - loxY) ** 2);
        if (distance < loxSize) {
            score++;
            scoreElement.textContent = score;
            resetLox();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
            canvas.style.transform = 'scale(1.05)';
            setTimeout(() => {
                canvas.style.transform = 'scale(1)';
            }, 100);
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–æ–≤
    canvas.addEventListener('click', function(e) {
        const rect = canvas.getBoundingClientRect();
        const scaleX = canvas.width / rect.width;
        const scaleY = canvas.height / rect.height;
        
        const x = (e.clientX - rect.left) * scaleX;
        const y = (e.clientY - rect.top) * scaleY;
        
        handleClick(x, y);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Å–∞–Ω–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    canvas.addEventListener('touchstart', function(e) {
        e.preventDefault();
        const touch = e.touches[0];
        const rect = canvas.getBoundingClientRect();
        const scaleX = canvas.width / rect.width;
        const scaleY = canvas.height / rect.height;
        
        const x = (touch.clientX - rect.left) * scaleX;
        const y = (touch.clientY - rect.top) * scaleY;
        
        handleClick(x, y);
    }, { passive: false });
    
    // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    startButton.addEventListener('click', function() {
        if (gameInterval) {
            clearInterval(gameInterval);
        }
        
        score = 0;
        scoreElement.textContent = score;
        resetLox();
        
        gameInterval = setInterval(gameLoop, 1000 / 30); // 30 FPS
        
        // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        startButton.textContent = '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É';
    });
    
    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ canvas –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    function resizeCanvas() {
        if (window.innerWidth <= 768) {
            canvas.width = Math.min(600, window.innerWidth - 40);
            canvas.height = 300;
        } else {
            canvas.width = 600;
            canvas.height = 400;
        }
        
        // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∏–≥—Ä—É –µ—Å–ª–∏ –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞
        if (gameInterval) {
            resetLox();
        }
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', resizeCanvas);
    resizeCanvas(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∞–ª–µ—Ä–µ–∏ –º–µ–º–æ–≤
function initMemeGallery() {
    const memeItems = document.querySelectorAll('.meme-item');
    
    memeItems.forEach(item => {
        item.addEventListener('click', function() {
            this.style.transform = 'scale(1.2) rotate(5deg)';
            setTimeout(() => {
                this.style.transform = 'scale(1) rotate(0deg)';
            }, 500);
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ª–µ–Ω–∏–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const img = item.querySelector('img');
        if (img) {
            img.loading = 'lazy';
        }
    });
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è UX
function addSmoothScrolling() {
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth'
            });
        });
    });
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–≤–µ—Ä—Ö"
// function addBackToTop() {
//     const backToTop = document.createElement('button');
//     backToTop.textContent = '‚Üë –ù–∞–≤–µ—Ä—Ö';
//     backToTop.style.cssText = `
//         position: fixed;
//         bottom: 20px;
//         right: 20px;
//         background: linear-gradient(to right, #ff00ff, #00ffff);
//         border: none;
//         padding: 10px 15px;
//         border-radius: 50px;
//         color: white;
//         cursor: pointer;
//         display: none;
//         z-index: 1000;
//         font-weight: bold;
//     `;
    
//     document.body.appendChild(backToTop);
    
//     window.addEventListener('scroll', function() {
//         if (window.pageYOffset > 300) {
//             backToTop.style.display = 'block';
//         } else {
//             backToTop.style.display = 'none';
//         }
//     });
    
//     backToTop.addEventListener('click', function() {
//         window.scrollTo({
//             top: 0,
//             behavior: 'smooth'
//         });
//     });
// }

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
document.addEventListener('DOMContentLoaded', function() {
    addSmoothScrolling();
    addBackToTop();
});

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function initScrollAnimations() {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, { threshold: 0.1 });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
    document.querySelectorAll('.card, .interactive-section').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(20px)';
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(el);
    });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', initScrollAnimations);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Ç–µ–º—ã (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏—á–∞)
// function initThemeToggle() {
//     const themeToggle = document.createElement('button');
//     themeToggle.textContent = 'üåô –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É';
//     themeToggle.style.cssText = `
//         position: fixed;
//         top: 20px;
//         right: 20px;
//         background: rgba(0,0,0,0.7);
//         border: 2px solid #ff00ff;
//         padding: 10px 15px;
//         border-radius: 50px;
//         color: white;
//         cursor: pointer;
//         z-index: 1000;
//         font-weight: bold;
//     `;
    
//     document.body.appendChild(themeToggle);
    
//     let isDarkTheme = true;
    
//     themeToggle.addEventListener('click', function() {
//         isDarkTheme = !isDarkTheme;
        
//         if (isDarkTheme) {
//             // –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
//             document.body.style.background = 'linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d)';
//             themeToggle.textContent = 'üåô –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É';
//         } else {
//             // –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞
//             document.body.style.background = 'linear-gradient(135deg, #667eea, #764ba2, #f093fb)';
//             themeToggle.textContent = '‚òÄÔ∏è –°–º–µ–Ω–∏—Ç—å —Ç–µ–º—É';
//         }
//     });
// }

// // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ç–µ–º—ã
// document.addEventListener('DOMContentLoaded', initThemeToggle);